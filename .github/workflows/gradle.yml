name: Java CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  sonar-and-semantic-release:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 11
        cache: gradle
    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '${{ steps.nvm.outputs.NVMRC }}'
        cache: npm
    - name: Gradle Wrapper Validation
      uses: gradle/wrapper-validation-action@v1
    - name: Build with Gradle
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      run: |
        ./gradlew build --no-daemon
        echo Verifying the java version used in class files...
        cd build/classes/groovy/main
        javap -v com.github.spotbugs.snom.SpotBugsPlugin | grep -q 'major version: 52'
    - name: Run Semantic Release
      run: |
        echo "gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}" > ~/.gradle/gradle.properties
        echo "gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}" >> ~/.gradle/gradle.properties
        rm -rf build/libs/*.jar
        npm ci
        npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Run SonarQube Scanner
      run: |
        if [ "$SONAR_LOGIN" != "" ]; then
          ./gradlew sonarqube -Dsonar.login=$SONAR_LOGIN --no-daemon
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: reports
        path: build/reports
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        gradle: ['7.0', '7.3.1']
        os: ['ubuntu-latest', 'windows-latest']
        exclude:
          # used in the sonar-and-semantic-release job
          - gradle: '7.3.1'
            os: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 11
        cache: gradle
    - name: Build with Gradle
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      run: |
        ./gradlew build --no-daemon "-Dsnom.test.functional.gradle=${{ matrix.gradle }}"
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: reports (Gradle ${{ matrix.gradle }} on ${{ matrix.os }})
        path: build/reports
