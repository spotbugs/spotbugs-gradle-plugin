name: Java CI

on:
  push:
    branches:
      - master
  pull_request: {}
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        gradle: [ '7.6.5', '8.14.2' ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        fetch-depth: 0
    - uses: webiny/action-conventional-commits@8bc41ff4e7d423d56fa4905f6ff79209a78776c7 # v1.3.0
      if: github.event_name == 'pull_request'
    - name: Set up JDK
      uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
      with:
        distribution: 'temurin'
        java-version-file: .java-version
    - name: Set up Node.js
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
      with:
        node-version-file: '.nvmrc'
        cache: npm
      if: matrix.gradle == '7.6.5' && matrix.os == 'ubuntu-latest'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ed408507eac070d1f99cc633dbcf757c94c7933a # v4
    - name: Build the project
      run: ./gradlew build -P"snom.test.functional.gradle=${{ matrix.gradle }}" --scan
    - name: Verify class files
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "$PATH"
        echo "Verifying the java version used in class files..."
        cd build/classes/kotlin/main
        javap -v com.github.spotbugs.snom.SpotBugsPlugin | grep -q 'major version: 55'
    - name: Run Semantic Release
      run: |
        echo "gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}" > ~/.gradle/gradle.properties
        echo "gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}" >> ~/.gradle/gradle.properties
        rm -rf build/libs/*.jar
        npm ci
        npx semantic-release
      if: matrix.gradle == '7.6.5' && matrix.os == 'ubuntu-latest' && github.repository == 'spotbugs/spotbugs-gradle-plugin'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
    - name: Run SonarQube Scanner
      run: |
        if [ "$SONAR_LOGIN" != "" ]; then
          ./gradlew sonarqube -Dsonar.login=$SONAR_LOGIN --no-daemon
        fi
      if: matrix.gradle == '7.6.5' && matrix.os == 'ubuntu-latest' && github.repository == 'spotbugs/spotbugs-gradle-plugin'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      if: always()
      with:
        name: reports (Gradle ${{ matrix.gradle }}, ${{ matrix.os }})
        path: build/reports
